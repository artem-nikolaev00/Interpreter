
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGNMENT BOTTOM CALL CELL COMMA CONST DECIMAL DIV DOWN EQ FUNC GREATER LBRACKET LEFT LESS MATRIX MINUS NDOWN NEWLINE NLEFT NOTEQ NRIGHT NTOP PLUS PROCENT RBRACKET RIGHT SEMICOLON SHARP SIGNED STAR TESTONCE TESTREP TOP UDECIMAL UNSIGNED VAR XRAYprogram : statestate : state statement\n                | statementstatement : declaration SEMICOLON NEWLINE\n                     | assignment SEMICOLON NEWLINE\n                     | compare SEMICOLON NEWLINE\n                     | prison SEMICOLON NEWLINE\n                     | if NEWLINE\n                     | while NEWLINE\n                     | operator SEMICOLON NEWLINE\n                     | function NEWLINE\n                     | function_call SEMICOLON NEWLINE\n                     | function_return SEMICOLON NEWLINEstatement : declaration SEMICOLON\n                     | assignment SEMICOLON\n                     | compare SEMICOLON\n                     | prison SEMICOLON\n                     | if\n                     | while\n                     | operator SEMICOLON\n                     | function\n                     | function_call SEMICOLON\n                     | function_return SEMICOLON statement : declaration error NEWLINE\n                     | assignment error NEWLINE\n                     | compare error NEWLINE\n                     | prison error NEWLINE\n                     | operator error NEWLINE\n                     | function_call error NEWLINE\n                     | function_return error NEWLINEdeclaration : type VAR\n                       | type VAR ASSIGNMENT expression\n                       | CONST type VAR ASSIGNMENT expression\n                       | MATRIX type VAR\n                       | MATRIX type VAR LBRACKET expression COMMA expression RBRACKETdeclaration : error VAR\n                        | error VAR ASSIGNMENT expression\n                        | CONST error VAR ASSIGNMENT expression\n                        | MATRIX error VAR\n                       | MATRIX error VAR LBRACKET expression COMMA expression RBRACKETtype : SIGNED\n                | UNSIGNED\n                | CELLexpression : math_expression\n                      | const\n                      | variable\n                      | side\n                      | compare\n                      | prison\n                      | function_call\n                      | LBRACKET expression RBRACKETside : LBRACKET directions RBRACKETside : LBRACKET error RBRACKETdirections : direction COMMA directions\n                    | directiondirection : TOP\n                    | NTOP\n                    | LEFT\n                    | NLEFT\n                    | RIGHT\n                    | NRIGHT\n                    | DOWN\n                    | NDOWN\n                    | BOTTOMcompare : expression EQ expression\n                    | expression LESS expression\n                    | expression GREATER expression\n                    | expression NOTEQ expressionmath_expression : expression PLUS expression\n                        | expression MINUS expression\n                        | expression STAR expression\n                        | expression DIV expression\n                        | expression PROCENT expressionconst : DECIMAL\n                | UDECIMALvariable : VAR\n                    | VAR LBRACKET index COMMA index RBRACKETindex : expressionprison : SHARP variableassignment : variable ASSIGNMENT expressionassignment : variable ASSIGNMENT errorif : TESTONCE LBRACKET math_expression RBRACKET LBRACKET NEWLINE state RBRACKET\n              | TESTONCE LBRACKET compare RBRACKET LBRACKET NEWLINE state RBRACKETif : TESTONCE errorwhile : TESTREP LBRACKET math_expression RBRACKET LBRACKET NEWLINE state RBRACKET\n              | TESTREP LBRACKET compare RBRACKET LBRACKET NEWLINE state RBRACKETif : TESTREP erroroperator : variable ASSIGNMENT robotrobot : direction\n                | XRAYfunction : FUNC VAR LBRACKET parameters RBRACKET LBRACKET NEWLINE state RBRACKET\n                    | FUNC VAR LBRACKET RBRACKET LBRACKET NEWLINE state RBRACKETfunction_return : VARfunction_call : CALL VAR LBRACKET vars RBRACKET\n                        | CALL VAR LBRACKET RBRACKETfunction_call : VAR LBRACKET vars RBRACKET error\n                        | VAR LBRACKET RBRACKET errorvars : VAR vars\n                | VARparameters : type VAR COMMA parameters\n                        | type VAR'
    
_lr_action_items = {'CONST':([0,2,3,8,9,11,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[18,18,-3,-18,-19,-21,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,18,18,18,18,18,18,18,18,18,18,18,-82,-83,-85,-86,18,-92,-91,]),'MATRIX':([0,2,3,8,9,11,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[19,19,-3,-18,-19,-21,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,19,19,19,19,19,19,19,19,19,19,19,-82,-83,-85,-86,19,-92,-91,]),'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,20,23,24,25,31,32,33,34,35,36,38,40,42,44,45,46,48,49,51,53,54,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,117,118,119,120,121,122,123,124,125,128,129,130,131,132,135,136,137,138,139,148,149,152,153,168,169,171,172,182,183,186,187,188,189,191,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,],[14,14,-3,37,39,41,43,-18,-19,47,-21,50,52,-93,66,68,71,91,-44,92,-45,-47,-74,-75,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-36,-31,-46,-48,-49,-50,-76,-56,-57,-58,-59,-60,-61,-62,-63,-64,136,-79,-76,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,153,-65,-66,-67,-68,-69,-70,-71,-72,-73,-34,-39,-51,-52,-53,-80,-81,-88,-89,-90,-37,-32,169,-97,-95,-96,-33,-38,-94,-77,14,14,14,14,14,14,14,14,14,14,14,-35,-40,-82,-83,-85,-86,14,-92,-91,]),'SHARP':([0,2,3,8,9,11,20,35,36,38,40,42,44,45,46,48,49,51,55,56,57,58,59,60,61,62,63,64,87,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[22,22,-3,-18,-19,-21,22,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,22,22,22,22,22,22,22,22,22,22,22,22,-84,-87,22,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-82,-83,-85,-86,22,-92,-91,]),'TESTONCE':([0,2,3,8,9,11,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[23,23,-3,-18,-19,-21,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,23,23,23,23,23,23,23,23,23,23,23,-82,-83,-85,-86,23,-92,-91,]),'TESTREP':([0,2,3,8,9,11,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[25,25,-3,-18,-19,-21,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,25,25,25,25,25,25,25,25,25,25,25,-82,-83,-85,-86,25,-92,-91,]),'FUNC':([0,2,3,8,9,11,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[26,26,-3,-18,-19,-21,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,26,26,26,26,26,26,26,26,26,26,26,-82,-83,-85,-86,26,-92,-91,]),'CALL':([0,2,3,8,9,11,20,35,36,38,40,42,44,45,46,48,49,51,55,56,57,58,59,60,61,62,63,64,87,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[27,27,-3,-18,-19,-21,27,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,27,27,27,27,27,27,27,27,27,27,27,27,-84,-87,27,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-82,-83,-85,-86,27,-92,-91,]),'VAR':([0,2,3,8,9,11,14,15,20,22,26,27,28,29,30,35,36,38,40,42,44,45,46,48,49,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,87,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,134,140,147,150,154,155,156,157,158,166,184,185,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[16,16,-3,-18,-19,-21,53,54,77,89,94,95,-41,-42,-43,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,112,77,77,77,77,77,77,77,77,77,126,127,128,129,77,77,-84,-87,77,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,77,77,150,112,77,150,150,77,77,77,77,77,181,77,77,16,16,16,16,16,16,16,16,16,16,16,-82,-83,-85,-86,16,-92,-91,]),'SIGNED':([0,2,3,8,9,11,18,19,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,146,186,187,188,189,191,192,195,196,197,198,199,200,204,205,206,207,208,209,210,],[28,28,-3,-18,-19,-21,28,28,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,28,28,28,28,28,28,28,28,28,28,28,28,28,-82,-83,-85,-86,28,-92,-91,]),'UNSIGNED':([0,2,3,8,9,11,18,19,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,146,186,187,188,189,191,192,195,196,197,198,199,200,204,205,206,207,208,209,210,],[29,29,-3,-18,-19,-21,29,29,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,29,29,29,29,29,29,29,29,29,29,29,29,29,-82,-83,-85,-86,29,-92,-91,]),'CELL':([0,2,3,8,9,11,18,19,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,146,186,187,188,189,191,192,195,196,197,198,199,200,204,205,206,207,208,209,210,],[30,30,-3,-18,-19,-21,30,30,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,30,30,30,30,30,30,30,30,30,30,30,30,30,-82,-83,-85,-86,30,-92,-91,]),'LBRACKET':([0,2,3,8,9,11,16,20,23,25,35,36,38,40,42,44,45,46,48,49,51,55,56,57,58,59,60,61,62,63,64,77,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,128,129,134,140,154,155,156,157,158,160,161,162,163,165,179,184,185,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[20,20,-3,-18,-19,-21,55,20,90,93,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,20,20,20,20,20,20,20,20,20,20,134,20,140,20,-84,-87,20,146,147,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,20,20,134,157,158,20,20,20,20,20,20,20,175,176,177,178,180,190,20,20,20,20,20,20,20,20,20,20,20,20,20,-82,-83,-85,-86,20,-92,-91,]),'DECIMAL':([0,2,3,8,9,11,20,35,36,38,40,42,44,45,46,48,49,51,55,56,57,58,59,60,61,62,63,64,87,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[33,33,-3,-18,-19,-21,33,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,33,33,33,33,33,33,33,33,33,33,33,33,-84,-87,33,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-82,-83,-85,-86,33,-92,-91,]),'UDECIMAL':([0,2,3,8,9,11,20,35,36,38,40,42,44,45,46,48,49,51,55,56,57,58,59,60,61,62,63,64,87,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,204,205,206,207,208,209,210,],[34,34,-3,-18,-19,-21,34,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,34,34,34,34,34,34,34,34,34,34,34,34,-84,-87,34,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-82,-83,-85,-86,34,-92,-91,]),'$end':([1,2,3,8,9,11,35,36,38,40,42,44,45,46,48,49,51,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,204,205,206,207,209,210,],[0,-1,-3,-18,-19,-21,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,-82,-83,-85,-86,-92,-91,]),'RBRACKET':([3,8,9,11,24,31,32,33,34,35,36,38,40,42,44,45,46,48,49,51,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,116,117,118,119,120,121,122,123,124,125,130,131,132,134,141,142,144,145,146,147,150,151,153,159,164,167,168,169,170,181,182,183,193,194,195,196,197,198,200,201,204,205,206,207,208,209,210,],[-3,-18,-19,-21,-44,-45,-47,-74,-75,-2,-14,-15,-16,-17,-8,-9,-20,-11,-22,-23,114,130,131,132,-46,-48,-49,-50,-55,-76,-56,-57,-58,-59,-60,-61,-62,-63,-64,-79,-76,-84,-87,-4,-24,-5,-25,-6,-26,-7,-27,-10,-28,-12,-29,-13,-30,-99,152,-78,-65,-66,-67,-68,-69,-70,-71,-72,-73,-51,-52,-53,114,160,161,162,163,165,168,-99,-98,-97,-54,179,182,-95,-96,183,-101,-94,-77,202,203,204,205,206,207,209,-100,-82,-83,-85,-86,210,-92,-91,]),'SEMICOLON':([4,5,6,7,10,12,13,16,24,31,32,33,34,53,54,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,117,118,119,120,121,122,123,124,125,128,129,130,131,132,135,136,137,138,139,148,149,153,168,169,171,172,182,183,202,203,],[36,38,40,42,46,49,51,-93,-44,-45,-47,-74,-75,-36,-31,-46,-48,-49,-50,-76,-56,-57,-58,-59,-60,-61,-62,-63,-64,-79,-76,-65,-66,-67,-68,-69,-70,-71,-72,-73,-34,-39,-51,-52,-53,-80,-81,-88,-89,-90,-37,-32,-97,-95,-96,-33,-38,-94,-77,-35,-40,]),'EQ':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,56,-46,-44,-45,-47,-74,-75,56,-46,-48,-49,-50,-76,-79,-76,-76,56,56,56,56,56,56,56,56,56,56,-51,-52,-53,56,-44,-48,56,-44,-48,56,56,-97,-95,-96,56,56,56,56,-94,-77,56,56,]),'LESS':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,57,-46,-44,-45,-47,-74,-75,57,-46,-48,-49,-50,-76,-79,-76,-76,57,57,57,57,57,57,57,57,57,57,-51,-52,-53,57,-44,-48,57,-44,-48,57,57,-97,-95,-96,57,57,57,57,-94,-77,57,57,]),'GREATER':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,58,-46,-44,-45,-47,-74,-75,58,-46,-48,-49,-50,-76,-79,-76,-76,58,58,58,58,58,58,58,58,58,58,-51,-52,-53,58,-44,-48,58,-44,-48,58,58,-97,-95,-96,58,58,58,58,-94,-77,58,58,]),'NOTEQ':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,59,-46,-44,-45,-47,-74,-75,59,-46,-48,-49,-50,-76,-79,-76,-76,59,59,59,59,59,59,59,59,59,59,-51,-52,-53,59,-44,-48,59,-44,-48,59,59,-97,-95,-96,59,59,59,59,-94,-77,59,59,]),'PLUS':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,60,-46,-44,-45,-47,-74,-75,60,-46,-48,-49,-50,-76,-79,-76,-76,60,60,60,60,60,60,60,60,60,60,-51,-52,-53,60,-44,-48,60,-44,-48,60,60,-97,-95,-96,60,60,60,60,-94,-77,60,60,]),'MINUS':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,61,-46,-44,-45,-47,-74,-75,61,-46,-48,-49,-50,-76,-79,-76,-76,61,61,61,61,61,61,61,61,61,61,-51,-52,-53,61,-44,-48,61,-44,-48,61,61,-97,-95,-96,61,61,61,61,-94,-77,61,61,]),'STAR':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,62,-46,-44,-45,-47,-74,-75,62,-46,-48,-49,-50,-76,-79,-76,-76,62,62,62,62,62,62,62,62,62,62,-51,-52,-53,62,-44,-48,62,-44,-48,62,62,-97,-95,-96,62,62,62,62,-94,-77,62,62,]),'DIV':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,63,-46,-44,-45,-47,-74,-75,63,-46,-48,-49,-50,-76,-79,-76,-76,63,63,63,63,63,63,63,63,63,63,-51,-52,-53,63,-44,-48,63,-44,-48,63,63,-97,-95,-96,63,63,63,63,-94,-77,63,63,]),'PROCENT':([6,7,12,16,17,21,24,31,32,33,34,69,72,73,74,75,77,88,89,112,116,117,118,119,120,121,122,123,124,125,130,131,132,135,141,142,143,144,145,148,149,153,168,169,171,172,173,174,182,183,193,194,],[-48,-49,-50,-76,64,-46,-44,-45,-47,-74,-75,64,-46,-48,-49,-50,-76,-79,-76,-76,64,64,64,64,64,64,64,64,64,64,-51,-52,-53,64,-44,-48,64,-44,-48,64,64,-97,-95,-96,64,64,64,64,-94,-77,64,64,]),'NEWLINE':([8,9,11,36,37,38,39,40,41,42,43,46,47,49,50,51,52,91,92,175,176,177,178,180,190,204,205,206,207,209,210,],[44,45,48,96,97,98,99,100,101,102,103,104,105,106,107,108,109,-84,-87,186,187,188,189,191,199,-82,-83,-85,-86,-92,-91,]),'ASSIGNMENT':([16,21,53,54,126,127,183,],[-76,87,110,111,155,156,-77,]),'TOP':([20,87,133,],[78,78,78,]),'NTOP':([20,87,133,],[79,79,79,]),'LEFT':([20,87,133,],[80,80,80,]),'NLEFT':([20,87,133,],[81,81,81,]),'RIGHT':([20,87,133,],[82,82,82,]),'NRIGHT':([20,87,133,],[83,83,83,]),'DOWN':([20,87,133,],[84,84,84,]),'NDOWN':([20,87,133,],[85,85,85,]),'BOTTOM':([20,87,133,],[86,86,86,]),'COMMA':([24,31,32,33,34,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,112,115,116,117,118,119,120,121,122,123,124,125,130,131,132,153,168,169,173,174,181,182,183,],[-44,-45,-47,-74,-75,-46,-48,-49,-50,133,-76,-56,-57,-58,-59,-60,-61,-62,-63,-64,-79,-76,-76,154,-78,-65,-66,-67,-68,-69,-70,-71,-72,-73,-51,-52,-53,-97,-95,-96,184,185,192,-94,-77,]),'XRAY':([87,],[139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'state':([0,186,187,188,189,191,199,],[2,195,196,197,198,200,208,]),'statement':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[3,35,3,3,3,3,3,35,35,35,35,3,35,35,]),'declaration':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'compare':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[6,6,73,73,73,73,73,73,73,73,73,73,73,73,142,145,73,73,73,73,73,73,73,73,73,73,73,6,6,6,6,6,6,6,6,6,6,6,6,]),'prison':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[7,7,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,7,7,7,7,7,7,7,7,7,7,7,7,]),'if':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'operator':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_call':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[12,12,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_return':([0,2,186,187,188,189,191,195,196,197,198,199,200,208,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'type':([0,2,18,19,146,186,187,188,189,191,192,195,196,197,198,199,200,208,],[15,15,65,67,166,15,15,15,15,15,166,15,15,15,15,15,15,15,]),'expression':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[17,17,69,116,117,118,119,120,121,122,123,124,125,135,143,143,148,149,116,116,116,171,172,173,174,193,194,17,17,17,17,17,17,17,17,17,17,17,17,]),'variable':([0,2,20,22,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[21,21,72,88,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,21,21,21,21,21,21,21,21,21,21,21,21,]),'math_expression':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,141,144,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'const':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'side':([0,2,20,55,56,57,58,59,60,61,62,63,64,87,90,93,110,111,134,140,154,155,156,157,158,184,185,186,187,188,189,191,195,196,197,198,199,200,208,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'directions':([20,133,],[70,159,]),'direction':([20,87,133,],[76,138,76,]),'vars':([55,112,134,147,150,],[113,151,113,167,151,]),'index':([55,134,140,154,],[115,115,115,170,]),'robot':([87,],[137,]),'parameters':([146,192,],[164,201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> state','program',1,'p_program','parser.py',26),
  ('state -> state statement','state',2,'p_state','parser.py',30),
  ('state -> statement','state',1,'p_state','parser.py',31),
  ('statement -> declaration SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',38),
  ('statement -> assignment SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',39),
  ('statement -> compare SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',40),
  ('statement -> prison SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',41),
  ('statement -> if NEWLINE','statement',2,'p_statement','parser.py',42),
  ('statement -> while NEWLINE','statement',2,'p_statement','parser.py',43),
  ('statement -> operator SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',44),
  ('statement -> function NEWLINE','statement',2,'p_statement','parser.py',45),
  ('statement -> function_call SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',46),
  ('statement -> function_return SEMICOLON NEWLINE','statement',3,'p_statement','parser.py',47),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',51),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',52),
  ('statement -> compare SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',53),
  ('statement -> prison SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',54),
  ('statement -> if','statement',1,'p_statement_error_no_nl','parser.py',55),
  ('statement -> while','statement',1,'p_statement_error_no_nl','parser.py',56),
  ('statement -> operator SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',57),
  ('statement -> function','statement',1,'p_statement_error_no_nl','parser.py',58),
  ('statement -> function_call SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',59),
  ('statement -> function_return SEMICOLON','statement',2,'p_statement_error_no_nl','parser.py',60),
  ('statement -> declaration error NEWLINE','statement',3,'p_statement_error','parser.py',65),
  ('statement -> assignment error NEWLINE','statement',3,'p_statement_error','parser.py',66),
  ('statement -> compare error NEWLINE','statement',3,'p_statement_error','parser.py',67),
  ('statement -> prison error NEWLINE','statement',3,'p_statement_error','parser.py',68),
  ('statement -> operator error NEWLINE','statement',3,'p_statement_error','parser.py',69),
  ('statement -> function_call error NEWLINE','statement',3,'p_statement_error','parser.py',70),
  ('statement -> function_return error NEWLINE','statement',3,'p_statement_error','parser.py',71),
  ('declaration -> type VAR','declaration',2,'p_declaration','parser.py',76),
  ('declaration -> type VAR ASSIGNMENT expression','declaration',4,'p_declaration','parser.py',77),
  ('declaration -> CONST type VAR ASSIGNMENT expression','declaration',5,'p_declaration','parser.py',78),
  ('declaration -> MATRIX type VAR','declaration',3,'p_declaration','parser.py',79),
  ('declaration -> MATRIX type VAR LBRACKET expression COMMA expression RBRACKET','declaration',8,'p_declaration','parser.py',80),
  ('declaration -> error VAR','declaration',2,'p_declaration_error','parser.py',104),
  ('declaration -> error VAR ASSIGNMENT expression','declaration',4,'p_declaration_error','parser.py',105),
  ('declaration -> CONST error VAR ASSIGNMENT expression','declaration',5,'p_declaration_error','parser.py',106),
  ('declaration -> MATRIX error VAR','declaration',3,'p_declaration_error','parser.py',107),
  ('declaration -> MATRIX error VAR LBRACKET expression COMMA expression RBRACKET','declaration',8,'p_declaration_error','parser.py',108),
  ('type -> SIGNED','type',1,'p_type','parser.py',120),
  ('type -> UNSIGNED','type',1,'p_type','parser.py',121),
  ('type -> CELL','type',1,'p_type','parser.py',122),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',126),
  ('expression -> const','expression',1,'p_expression','parser.py',127),
  ('expression -> variable','expression',1,'p_expression','parser.py',128),
  ('expression -> side','expression',1,'p_expression','parser.py',129),
  ('expression -> compare','expression',1,'p_expression','parser.py',130),
  ('expression -> prison','expression',1,'p_expression','parser.py',131),
  ('expression -> function_call','expression',1,'p_expression','parser.py',132),
  ('expression -> LBRACKET expression RBRACKET','expression',3,'p_expression','parser.py',133),
  ('side -> LBRACKET directions RBRACKET','side',3,'p_side','parser.py',140),
  ('side -> LBRACKET error RBRACKET','side',3,'p_side_error','parser.py',144),
  ('directions -> direction COMMA directions','directions',3,'p_directions','parser.py',149),
  ('directions -> direction','directions',1,'p_directions','parser.py',150),
  ('direction -> TOP','direction',1,'p_direction','parser.py',157),
  ('direction -> NTOP','direction',1,'p_direction','parser.py',158),
  ('direction -> LEFT','direction',1,'p_direction','parser.py',159),
  ('direction -> NLEFT','direction',1,'p_direction','parser.py',160),
  ('direction -> RIGHT','direction',1,'p_direction','parser.py',161),
  ('direction -> NRIGHT','direction',1,'p_direction','parser.py',162),
  ('direction -> DOWN','direction',1,'p_direction','parser.py',163),
  ('direction -> NDOWN','direction',1,'p_direction','parser.py',164),
  ('direction -> BOTTOM','direction',1,'p_direction','parser.py',165),
  ('compare -> expression EQ expression','compare',3,'p_compare','parser.py',169),
  ('compare -> expression LESS expression','compare',3,'p_compare','parser.py',170),
  ('compare -> expression GREATER expression','compare',3,'p_compare','parser.py',171),
  ('compare -> expression NOTEQ expression','compare',3,'p_compare','parser.py',172),
  ('math_expression -> expression PLUS expression','math_expression',3,'p_math_expression','parser.py',177),
  ('math_expression -> expression MINUS expression','math_expression',3,'p_math_expression','parser.py',178),
  ('math_expression -> expression STAR expression','math_expression',3,'p_math_expression','parser.py',179),
  ('math_expression -> expression DIV expression','math_expression',3,'p_math_expression','parser.py',180),
  ('math_expression -> expression PROCENT expression','math_expression',3,'p_math_expression','parser.py',181),
  ('const -> DECIMAL','const',1,'p_const','parser.py',185),
  ('const -> UDECIMAL','const',1,'p_const','parser.py',186),
  ('variable -> VAR','variable',1,'p_variable','parser.py',190),
  ('variable -> VAR LBRACKET index COMMA index RBRACKET','variable',6,'p_variable','parser.py',191),
  ('index -> expression','index',1,'p_index','parser.py',198),
  ('prison -> SHARP variable','prison',2,'p_prison','parser.py',202),
  ('assignment -> variable ASSIGNMENT expression','assignment',3,'p_assignment','parser.py',206),
  ('assignment -> variable ASSIGNMENT error','assignment',3,'p_assignment_err','parser.py',211),
  ('if -> TESTONCE LBRACKET math_expression RBRACKET LBRACKET NEWLINE state RBRACKET','if',8,'p_if','parser.py',216),
  ('if -> TESTONCE LBRACKET compare RBRACKET LBRACKET NEWLINE state RBRACKET','if',8,'p_if','parser.py',217),
  ('if -> TESTONCE error','if',2,'p_if_error','parser.py',224),
  ('while -> TESTREP LBRACKET math_expression RBRACKET LBRACKET NEWLINE state RBRACKET','while',8,'p_for','parser.py',229),
  ('while -> TESTREP LBRACKET compare RBRACKET LBRACKET NEWLINE state RBRACKET','while',8,'p_for','parser.py',230),
  ('if -> TESTREP error','if',2,'p_for_error','parser.py',237),
  ('operator -> variable ASSIGNMENT robot','operator',3,'p_operator','parser.py',242),
  ('robot -> direction','robot',1,'p_robot','parser.py',246),
  ('robot -> XRAY','robot',1,'p_robot','parser.py',247),
  ('function -> FUNC VAR LBRACKET parameters RBRACKET LBRACKET NEWLINE state RBRACKET','function',9,'p_function','parser.py',261),
  ('function -> FUNC VAR LBRACKET RBRACKET LBRACKET NEWLINE state RBRACKET','function',8,'p_function','parser.py',262),
  ('function_return -> VAR','function_return',1,'p_function_return','parser.py',275),
  ('function_call -> CALL VAR LBRACKET vars RBRACKET','function_call',5,'p_function_call','parser.py',279),
  ('function_call -> CALL VAR LBRACKET RBRACKET','function_call',4,'p_function_call','parser.py',280),
  ('function_call -> VAR LBRACKET vars RBRACKET error','function_call',5,'p_function_call_error','parser.py',289),
  ('function_call -> VAR LBRACKET RBRACKET error','function_call',4,'p_function_call_error','parser.py',290),
  ('vars -> VAR vars','vars',2,'p_vars','parser.py',299),
  ('vars -> VAR','vars',1,'p_vars','parser.py',300),
  ('parameters -> type VAR COMMA parameters','parameters',4,'p_parameters','parser.py',307),
  ('parameters -> type VAR','parameters',2,'p_parameters','parser.py',308),
]
